package org.wildid.entity;
// Generated Sep 16, 2015 3:35:06 PM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * ImageSpecies generated by hbm2java
 */
@XmlAccessorType(XmlAccessType.PROPERTY)
@XmlRootElement
@Entity
@Table(name = "image_species", catalog = "wild_ID"
)
public class ImageSpecies implements java.io.Serializable {

    private Integer imageSpeciesId;
    private FamilyGenusSpecies familyGenusSpecies;
    private Person person;
    private Integer individualCount;
    private ImageUncertaintyType uncertainty;
    private HomoSapiensType homoSapiensType;
    private TaxaCommonEnglishName engishCommonName;
    private Image image;
    private Set<ImageIndividual> imageIndividuals = new HashSet<>(0);
    private String subspecies;

    public ImageSpecies() {
    }

    public ImageSpecies(FamilyGenusSpecies familyGenusSpecies, Image image, Person person, ImageUncertaintyType uncertainty) {
        this.familyGenusSpecies = familyGenusSpecies;
        this.image = image;
        this.person = person;
        this.uncertainty = uncertainty;
    }

    public ImageSpecies(FamilyGenusSpecies familyGenusSpecies, Image image, Person person, Integer individualCount, ImageUncertaintyType uncertainty, Set<ImageIndividual> imageIndividuals) {
        this.familyGenusSpecies = familyGenusSpecies;
        this.image = image;
        this.person = person;
        this.individualCount = individualCount;
        this.uncertainty = uncertainty;
        this.imageIndividuals = imageIndividuals;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "image_species_id", unique = true, nullable = false)
    public Integer getImageSpeciesId() {
        return this.imageSpeciesId;
    }

    public void setImageSpeciesId(Integer imageSpeciesId) {
        this.imageSpeciesId = imageSpeciesId;
    }

    //@XmlTransient
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "family_genus_species_id", nullable = false)
    public FamilyGenusSpecies getFamilyGenusSpecies() {
        return this.familyGenusSpecies;
    }

    public void setFamilyGenusSpecies(FamilyGenusSpecies familyGenusSpecies) {
        this.familyGenusSpecies = familyGenusSpecies;
    }

    /*
    @XmlTransient
    //@XmlElement(name="FamilyGenusSpecies")
    public FamilyGenusSpeciesWrapper getFamilyGenusSpeciesWrapper() {
        return new FamilyGenusSpeciesWrapper(this.familyGenusSpecies.getFamilyGenusSpeciesId(),
            this.familyGenusSpecies.getClass_(),
            this.familyGenusSpecies.getOrder(),
            this.familyGenusSpecies.getFamily(),
            this.familyGenusSpecies.getGenus(),
            this.familyGenusSpecies.getSpecies(),
            this.familyGenusSpecies.getIucnSpeciesId());
    }
     */
    @XmlTransient
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "image_id", nullable = false)
    public Image getImage() {
        return this.image;
    }

    public void setImage(Image image) {
        this.image = image;
    }

    @XmlElement(name = "imageTypeIdentifyingPerson")
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "identify_person_id", nullable = false)
    public Person getPerson() {
        return this.person;
    }

    public void setPerson(Person person) {
        this.person = person;
    }

    //@XmlTransient
    @Column(name = "individual_count")
    public Integer getIndividualCount() {
        return this.individualCount;
    }

    public void setIndividualCount(Integer individualCount) {
        this.individualCount = individualCount;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "uncertainty_type_id", nullable = false)
    public ImageUncertaintyType getUncertainty() {
        return this.uncertainty;
    }

    public void setUncertainty(ImageUncertaintyType uncertainty) {
        this.uncertainty = uncertainty;
    }

    @XmlElementWrapper(name = "individuals")
    @XmlElement(name = "individual")
    @OneToMany(fetch = FetchType.EAGER, mappedBy = "imageSpecies")
    public Set<ImageIndividual> getImageIndividuals() {
        return this.imageIndividuals;
    }

    public void setImageIndividuals(Set<ImageIndividual> imageIndividuals) {
        this.imageIndividuals = imageIndividuals;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "homo_sapiens_type_id", nullable = false)
    public HomoSapiensType getHomoSapiensType() {
        return this.homoSapiensType;
    }

    public void setHomoSapiensType(HomoSapiensType homoSapiensType) {
        this.homoSapiensType = homoSapiensType;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "common_name_eng_id", nullable = false)
    public TaxaCommonEnglishName getEngishCommonName() {
        return engishCommonName;
    }

    public void setEngishCommonName(TaxaCommonEnglishName engishCommonName) {
        this.engishCommonName = engishCommonName;
    }

    @Column(name = "subspecies", length = 32)
    public String getSubspecies() {
        return this.subspecies;
    }

    public void setSubspecies(String subspecies) {
        this.subspecies = subspecies;
    }
}
