package org.wildid.entity;
// Generated Sep 16, 2015 3:35:06 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.SortedSet;
import java.util.TreeSet;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * Project generated by hbm2java
 */
@Entity
@Table(name = "project", catalog = "wild_ID")
public class Project implements java.io.Serializable {

    private Integer projectId;
    private Country country;
    private Person contentPerson;
    private ProjectStatus projectStatus;
    private String name;
    private String shortName;
    private String abbrevName;
    private String objective;
    private String useAndConstraints;
    private Date startTime;
    private Date endTime;
    private Double latitude;
    private Double longitude;
    private String timeZone;
    private Date lastUpdateTime;
    private Integer respositoryId;
    private Date respositoryLastSyncTime;

    @XmlElement(name = "array")
    private Set<CameraTrapArray> cameraTrapArrays = new HashSet<>();

    @XmlElement(name = "projectOrganization")
    private SortedSet<ProjectOrganization> projectOrganizations = new TreeSet<>(new ProjectOrganizationComparator());

    private Set<ProjectPersonRole> projectPersonRoles = new HashSet(0);

    @XmlElement(name = "event")
    private SortedSet<Event> events = new TreeSet<>(new EventComparator());

    private Set<Camera> cameras = new HashSet<>();

    public Project() {
    }

    public Project(String name, String abbrevName, Date startTime, Date endTime, Date lastUpdateTime, Date respositoryLastSyncTime) {
        this.name = name;
        this.abbrevName = abbrevName;
        this.startTime = startTime;
        this.endTime = endTime;
        this.lastUpdateTime = lastUpdateTime;
        this.respositoryLastSyncTime = respositoryLastSyncTime;
    }

    public Project(Country country, Person person, ProjectStatus projectStatus, String name, String shortName, String abbrevName, String objective, String useAndConstraints, Date startTime, Date endTime, Double latitude, Double longitude, String timeZone, Date lastUpdateTime, Integer respositoryId, Date respositoryLastSyncTime, Set cameraTrapArrays, SortedSet projectOrganizations, Set projectPersonRoles, SortedSet<Event> events) {
        this.country = country;
        this.contentPerson = person;
        this.projectStatus = projectStatus;
        this.name = name;
        this.shortName = shortName;
        this.abbrevName = abbrevName;
        this.objective = objective;
        this.useAndConstraints = useAndConstraints;
        this.startTime = startTime;
        this.endTime = endTime;
        this.latitude = latitude;
        this.longitude = longitude;
        this.timeZone = timeZone;
        this.lastUpdateTime = lastUpdateTime;
        this.respositoryId = respositoryId;
        this.respositoryLastSyncTime = respositoryLastSyncTime;
        this.cameraTrapArrays = cameraTrapArrays;
        this.projectOrganizations = projectOrganizations;
        this.projectPersonRoles = projectPersonRoles;
        this.events = events;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "project_id", unique = true, nullable = false)
    public Integer getProjectId() {
        return this.projectId;
    }

    public void setProjectId(Integer projectId) {
        this.projectId = projectId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "country_id")
    public Country getCountry() {
        return this.country;
    }

    public void setCountry(Country country) {
        this.country = country;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "contact_person_id")
    public Person getContentPerson() {
        return this.contentPerson;
    }

    public void setContentPerson(Person contentPerson) {
        this.contentPerson = contentPerson;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "project_status_id")
    public ProjectStatus getProjectStatus() {
        return this.projectStatus;
    }

    public void setProjectStatus(ProjectStatus projectStatus) {
        this.projectStatus = projectStatus;
    }

    @Column(name = "name", nullable = false)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "short_name", length = 16)
    public String getShortName() {
        return this.shortName;
    }

    public void setShortName(String shortName) {
        this.shortName = shortName;
    }

    @Column(name = "abbrev_name", nullable = false, length = 8)
    public String getAbbrevName() {
        return this.abbrevName;
    }

    public void setAbbrevName(String abbrevName) {
        this.abbrevName = abbrevName;
    }

    @Column(name = "objective", length = 65535)
    public String getObjective() {
        return this.objective;
    }

    public void setObjective(String objective) {
        this.objective = objective;
    }

    @Column(name = "use_and_constraints", length = 65535)
    public String getUseAndConstraints() {
        return this.useAndConstraints;
    }

    public void setUseAndConstraints(String useAndConstraints) {
        this.useAndConstraints = useAndConstraints;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "start_time", length = 19)
    public Date getStartTime() {
        return this.startTime;
    }

    public void setStartTime(Date startTime) {
        this.startTime = startTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "end_time", length = 19)
    public Date getEndTime() {
        return this.endTime;
    }

    public void setEndTime(Date endTime) {
        this.endTime = endTime;
    }

    @Column(name = "latitude", precision = 22, scale = 0)
    public Double getLatitude() {
        return this.latitude;
    }

    public void setLatitude(Double latitude) {
        this.latitude = latitude;
    }

    @Column(name = "longitude", precision = 22, scale = 0)
    public Double getLongitude() {
        return this.longitude;
    }

    public void setLongitude(Double longitude) {
        this.longitude = longitude;
    }

    @Column(name = "time_zone", length = 50)
    public String getTimeZone() {
        return this.timeZone;
    }

    public void setTimeZone(String timeZone) {
        this.timeZone = timeZone;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_update_time", nullable = false, length = 19)
    public Date getLastUpdateTime() {
        return this.lastUpdateTime;
    }

    public void setLastUpdateTime(Date lastUpdateTime) {
        this.lastUpdateTime = lastUpdateTime;
    }

    @Column(name = "respository_id")
    public Integer getRespositoryId() {
        return this.respositoryId;
    }

    public void setRespositoryId(Integer respositoryId) {
        this.respositoryId = respositoryId;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "respository_last_sync_time", length = 19)
    public Date getRespositoryLastSyncTime() {
        return this.respositoryLastSyncTime;
    }

    public void setRespositoryLastSyncTime(Date respositoryLastSyncTime) {
        this.respositoryLastSyncTime = respositoryLastSyncTime;
    }

    @XmlTransient
    @OneToMany(fetch = FetchType.EAGER, mappedBy = "project")
    public Set<CameraTrapArray> getCameraTrapArrays() {
        return this.cameraTrapArrays;
    }

    public void setCameraTrapArrays(Set<CameraTrapArray> cameraTrapArrays) {
        this.cameraTrapArrays = cameraTrapArrays;
    }

    @XmlTransient
    @OneToMany(fetch = FetchType.EAGER, mappedBy = "project")
    public SortedSet<ProjectOrganization> getProjectOrganizations() {
        return this.projectOrganizations;
    }

    public void setProjectOrganizations(SortedSet<ProjectOrganization> projectOrganizations) {
        this.projectOrganizations = projectOrganizations;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "project")
    public Set<ProjectPersonRole> getProjectPersonRoles() {
        return this.projectPersonRoles;
    }

    public void setProjectPersonRoles(Set<ProjectPersonRole> projectPersonRoles) {
        this.projectPersonRoles = projectPersonRoles;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "project")
    public Set<Event> getEvents() {
        return this.events;
    }

    public void setEvents(SortedSet<Event> events) {
        this.events = events;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "project")
    @OrderBy("serialNumber")
    public Set<Camera> getCameras() {
        return cameras;
    }

    public void setCameras(Set<Camera> cameras) {
        this.cameras = cameras;
    }
}
