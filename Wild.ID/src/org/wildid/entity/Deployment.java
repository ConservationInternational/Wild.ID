package org.wildid.entity;
// Generated Sep 16, 2015 3:35:06 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlTransient;

/**
 * Deployment generated by hbm2java
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement
@XmlSeeAlso(Person.class)
@Entity
@Table(name = "deployment", catalog = "wild_ID"
)
public class Deployment implements java.io.Serializable {

    private Integer deploymentId;
    private String name;
    private Event event;
    private CameraTrap cameraTrap;
    private Camera camera;
    private Date startTime;
    private Date endTime;

    @XmlElement(name = "setupPerson")
    private Person setupPerson;

    @XmlElement(name = "pickupPerson")
    private Person pickupPerson;

    private BaitType baitType;
    private String baitDetail;
    private FeatureType featureType;
    private String featureTypeDetail;
    private FailureType failureType;
    private String failureDetail;
    private String quietPeriodSetting;
    private String restrctionOnAccess;

    @XmlTransient
    private Set dualDeploymentsForDeployment2Id = new HashSet(0);

    @XmlTransient
    private Set dualDeploymentsForDeployment1Id = new HashSet(0);

    private Set<ImageSequence> imageSequences = new HashSet(0);

    public Deployment() {
    }

    public Deployment(BaitType baitType, Camera camera, CameraTrap cameraTrap, Event event, FeatureType featureType, Person personBySetPersonId, Person personByPickPersonId, Date startTime, Date endTime) {
        this.baitType = baitType;
        this.camera = camera;
        this.cameraTrap = cameraTrap;
        this.event = event;
        this.featureType = featureType;
        this.setupPerson = personBySetPersonId;
        this.pickupPerson = personByPickPersonId;
        this.startTime = startTime;
        this.endTime = endTime;
    }

    public Deployment(BaitType baitType, Camera camera, CameraTrap cameraTrap, Event event, FeatureType featureType, Person personBySetPersonId, Person personByPickPersonId, Date startTime, Date endTime, String quietPeriodSetting, String failureDetail, String restrctionOnAccess, String baitDetail, String featureTypeDetail, Set dualDeploymentsForDeployment2Id, Set dualDeploymentsForDeployment1Id, Set<ImageSequence> imageSequences) {
        this.baitType = baitType;
        this.camera = camera;
        this.cameraTrap = cameraTrap;
        this.event = event;
        this.featureType = featureType;
        this.setupPerson = personBySetPersonId;
        this.pickupPerson = personByPickPersonId;
        this.startTime = startTime;
        this.endTime = endTime;
        this.quietPeriodSetting = quietPeriodSetting;
        this.failureDetail = failureDetail;
        this.restrctionOnAccess = restrctionOnAccess;
        this.baitDetail = baitDetail;
        this.featureTypeDetail = featureTypeDetail;
        this.dualDeploymentsForDeployment2Id = dualDeploymentsForDeployment2Id;
        this.dualDeploymentsForDeployment1Id = dualDeploymentsForDeployment1Id;
        this.imageSequences = imageSequences;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "deployment_id", unique = true, nullable = false)
    public Integer getDeploymentId() {
        return this.deploymentId;
    }

    public void setDeploymentId(Integer deploymentId) {
        this.deploymentId = deploymentId;
    }

    @JoinColumn(name = "name")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "bait_type_id", nullable = false)
    public BaitType getBaitType() {
        return this.baitType;
    }

    public void setBaitType(BaitType baitType) {
        this.baitType = baitType;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "camera_id", nullable = false)
    public Camera getCamera() {
        return this.camera;
    }

    public void setCamera(Camera camera) {
        this.camera = camera;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "camera_trap_id", nullable = false)
    public CameraTrap getCameraTrap() {
        return this.cameraTrap;
    }

    public void setCameraTrap(CameraTrap cameraTrap) {
        this.cameraTrap = cameraTrap;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "event_id", nullable = false)
    public Event getEvent() {
        return this.event;
    }

    public void setEvent(Event event) {
        this.event = event;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "feature_type_id", nullable = true)
    public FeatureType getFeatureType() {
        return this.featureType;
    }

    public void setFeatureType(FeatureType featureType) {
        this.featureType = featureType;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "failure_type_id", nullable = true)
    public FailureType getFailureType() {
        return this.failureType;
    }

    public void setFailureType(FailureType failureType) {
        this.failureType = failureType;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "set_person_id", nullable = true)
    public Person getSetupPerson() {
        return this.setupPerson;
    }

    public void setSetupPerson(Person setupPerson) {
        this.setupPerson = setupPerson;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "pick_person_id", nullable = true)
    public Person getPickupPerson() {
        return this.pickupPerson;
    }

    public void setPickupPerson(Person pickupPerson) {
        this.pickupPerson = pickupPerson;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "start_time", nullable = true, length = 19)
    public Date getStartTime() {
        return this.startTime;
    }

    public void setStartTime(Date startTime) {
        this.startTime = startTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "end_time", nullable = true, length = 19)
    public Date getEndTime() {
        return this.endTime;
    }

    public void setEndTime(Date endTime) {
        this.endTime = endTime;
    }

    @Column(name = "quiet_period_setting", length = 128)
    public String getQuietPeriodSetting() {
        return this.quietPeriodSetting;
    }

    public void setQuietPeriodSetting(String quietPeriodSetting) {
        this.quietPeriodSetting = quietPeriodSetting;
    }

    @Column(name = "failure_detail", length = 65535)
    public String getFailureDetail() {
        return this.failureDetail;
    }

    public void setFailureDetail(String failureDetail) {
        this.failureDetail = failureDetail;
    }

    @Column(name = "restrction_on_access", length = 250)
    public String getRestrctionOnAccess() {
        return this.restrctionOnAccess;
    }

    public void setRestrctionOnAccess(String restrctionOnAccess) {
        this.restrctionOnAccess = restrctionOnAccess;
    }

    @Column(name = "bait_detail", length = 250)
    public String getBaitDetail() {
        return this.baitDetail;
    }

    public void setBaitDetail(String baitDetail) {
        this.baitDetail = baitDetail;
    }

    @Column(name = "feature_type_detail", length = 250)
    public String getFeatureTypeDetail() {
        return this.featureTypeDetail;
    }

    public void setFeatureTypeDetail(String featureTypeDetail) {
        this.featureTypeDetail = featureTypeDetail;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "deploymentByDeployment2Id")
    public Set getDualDeploymentsForDeployment2Id() {
        return this.dualDeploymentsForDeployment2Id;
    }

    public void setDualDeploymentsForDeployment2Id(Set dualDeploymentsForDeployment2Id) {
        this.dualDeploymentsForDeployment2Id = dualDeploymentsForDeployment2Id;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "deploymentByDeployment1Id")
    public Set getDualDeploymentsForDeployment1Id() {
        return this.dualDeploymentsForDeployment1Id;
    }

    public void setDualDeploymentsForDeployment1Id(Set dualDeploymentsForDeployment1Id) {
        this.dualDeploymentsForDeployment1Id = dualDeploymentsForDeployment1Id;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "deployment")
    public Set<ImageSequence> getImageSequences() {
        return this.imageSequences;
    }

    public void setImageSequences(Set<ImageSequence> imageSequences) {
        this.imageSequences = imageSequences;
    }

}
